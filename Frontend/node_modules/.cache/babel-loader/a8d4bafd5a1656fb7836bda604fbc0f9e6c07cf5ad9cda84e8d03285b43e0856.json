{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Developement\\\\Front-end\\\\Projects\\\\iNotebook-Real-main\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from './noteContext';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:8000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  //Get all Notes\n  const getNotes = async (Title, Description, Tag) => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  //Add a Note\n  const addNote = async (Title, Description, Tag) => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        Title,\n        Description,\n        Tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n  //Delete a Note\n  const deleteNote = async id => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  //Edit a Note\n  const editNote = async (id, Title, Description, Tag) => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        Title,\n        Description,\n        Tag\n      }) // body data type must match \"Content-Type\" header\n    });\n\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    //Logic to Edit in Client\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        newNotes[index].Title = Title;\n        newNotes[index].Description = Description;\n        newNotes[index].Tag = Tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","Title","Description","Tag","response","fetch","method","headers","localStorage","getItem","json","addNote","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Web Developement/Front-end/Projects/iNotebook-Real-main/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from './noteContext';\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:8000\"\r\n  const notesInitial = []\r\n\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  //Get all Notes\r\n  const getNotes = async (Title, Description, Tag) => {\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n    });\r\n    const json = await response.json()\r\n    setNotes(json)\r\n  }\r\n\r\n  //Add a Note\r\n  const addNote = async (Title, Description, Tag) => {\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({ Title, Description, Tag }),\r\n    });\r\n    const note = await response.json();\r\n    setNotes(notes.concat(note))\r\n  }\r\n  //Delete a Note\r\n  const deleteNote = async (id) => {\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n    });\r\n    const json = response.json();\r\n    console.log(json)\r\n\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes);\r\n\r\n\r\n  }\r\n  //Edit a Note\r\n  const editNote = async (id, Title, Description, Tag) => {\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({ Title, Description, Tag }), // body data type must match \"Content-Type\" header\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n    //Logic to Edit in Client\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].Title = Title;\r\n        newNotes[index].Description = Description;\r\n        newNotes[index].Tag = Tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}